version: 2.1
orbs:
  aws-code-deploy: circleci/aws-code-deploy@1.0.1
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.6.5
        environment:
          FLASK_APP: run
          FLASK_ENV: development
          APP_ENV: testing
          DATABASE_TEST_URL: "postgres://andela:andela@localhost:5432/test_andelaeats"
      - image: circleci/postgres:11.5
        environment:
          POSTGRES_USER: andela
          POSTGRES_DB: test_andelaeats
          POSTGRES_PASSWORD: andela
      - image: circleci/redis:latest

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/

    working_directory: ~/pm_api

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: Waiting for Postgres to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z localhost 5432 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for Postgres && exit 1
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - run:
          name:  Download test reporter
          command: |
            mkdir -p tmp/
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./tmp/cc-test-reporter
            chmod +x ./tmp/cc-test-reporter
      - persist_to_workspace:
          root: tmp
          paths:
            - cc-test-reporter
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            pytest --cov=app/ --cov-report xml
            ./tmp/cc-test-reporter format-coverage coverage.xml -t "coverage.py" -o "tmp/cc.testreport.json"
          environment:
            REDIS_URL: redis://localhost:6379
      - run:
          name: upload coverage
          command: |
            . venv/bin/activate
            coverage report && coveralls || ./tmp/cc-test-reporter upload-coverage -i tmp/cc.testreport.json

      - persist_to_workspace:
          root: tmp/
          paths:
            - cc.testreport.json

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
    
workflows:
  build-deploy:
    jobs:
      - build
      # - deploy_aws:
      #     requires:
      #       - build
      #     filters:
      #       branches:
      #         only:
      #           - development
      - aws-code-deploy/deploy:
          application-name: pm-deploy
          bundle-bucket: pm-codedeploy-bucket
          bundle-key: pmS3BucketKey
          deployment-group: pm-instance
          service-role-arn: arn:aws:iam::362231138751:role/CodeDeployRole
